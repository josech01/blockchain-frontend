import { config } from './index';
export const wagmiNftContractConfig = {
  address: config.nftAddress,
  abi: [
    { type: 'constructor', inputs: [{ type: 'address', name: 'tokenAddr', internalType: 'address' }] },
    {
      type: 'function',
      stateMutability: 'view',
      outputs: [{ type: 'uint256', name: '_value', internalType: 'uint256' }],
      name: '_tokenIds',
      inputs: [],
    },
    {
      type: 'function',
      stateMutability: 'nonpayable',
      outputs: [],
      name: 'addNFTType',
      inputs: [
        { type: 'uint256', name: 'category', internalType: 'uint256' },
        { type: 'uint256', name: 'value', internalType: 'uint256' },
        { type: 'string', name: 'uri', internalType: 'string' },
        { type: 'bool', name: 'isRandom', internalType: 'bool' },
        { type: 'bool', name: 'isFixed', internalType: 'bool' },
        { type: 'uint256', name: 'max', internalType: 'uint256' },
        { type: 'uint256', name: 'min', internalType: 'uint256' },
        { type: 'uint256', name: 'defaultWeight', internalType: 'uint256' },
      ],
    },
    {
      type: 'function',
      stateMutability: 'view',
      outputs: [{ type: 'uint256', name: '', internalType: 'uint256' }],
      name: 'addressToBurntAmount',
      inputs: [{ type: 'address', name: '', internalType: 'address' }],
    },
    {
      type: 'function',
      stateMutability: 'nonpayable',
      outputs: [],
      name: 'approve',
      inputs: [
        { type: 'address', name: 'to', internalType: 'address' },
        { type: 'uint256', name: 'tokenId', internalType: 'uint256' },
      ],
    },
    {
      type: 'function',
      stateMutability: 'view',
      outputs: [{ type: 'uint256', name: '', internalType: 'uint256' }],
      name: 'balanceOf',
      inputs: [{ type: 'address', name: 'owner', internalType: 'address' }],
    },
    {
      type: 'function',
      stateMutability: 'view',
      outputs: [{ type: 'address', name: '', internalType: 'address' }],
      name: 'getApproved',
      inputs: [{ type: 'uint256', name: 'tokenId', internalType: 'uint256' }],
    },
    {
      type: 'function',
      stateMutability: 'view',
      outputs: [
        {
          type: 'tuple[]',
          name: '',
          internalType: 'struct BoosterTestNFT.NFTType[]',
          components: [
            { type: 'uint256' },
            { type: 'uint256' },
            { type: 'uint256' },
            { type: 'string' },
            { type: 'bool' },
            { type: 'bool' },
            { type: 'bool' },
            { type: 'uint256' },
            { type: 'uint256' },
            { type: 'uint256' },
          ],
        },
      ],
      name: 'getNFTTypes',
      inputs: [],
    },
    {
      type: 'function',
      stateMutability: 'view',
      outputs: [
        {
          type: 'tuple[]',
          name: 'list',
          internalType: 'struct BoosterTestNFT.NFTWithOwner[]',
          components: [{ type: 'uint256' }, { type: 'uint256' }, { type: 'uint256' }, { type: 'address' }],
        },
      ],
      name: 'getNFTs',
      inputs: [
        { type: 'uint256', name: 'start', internalType: 'uint256' },
        { type: 'uint256', name: 'length', internalType: 'uint256' },
      ],
    },
    {
      type: 'function',
      stateMutability: 'view',
      outputs: [{ type: 'bool', name: '', internalType: 'bool' }],
      name: 'isApprovedForAll',
      inputs: [
        { type: 'address', name: 'owner', internalType: 'address' },
        { type: 'address', name: 'operator', internalType: 'address' },
      ],
    },
    {
      type: 'function',
      stateMutability: 'nonpayable',
      outputs: [],
      name: 'mint',
      inputs: [{ type: 'uint256', name: 'typeId', internalType: 'uint256' }],
    },
    {
      type: 'function',
      stateMutability: 'view',
      outputs: [{ type: 'string', name: '', internalType: 'string' }],
      name: 'name',
      inputs: [],
    },
    {
      type: 'function',
      stateMutability: 'view',
      outputs: [
        { type: 'uint256', name: 'category', internalType: 'uint256' },
        { type: 'uint256', name: 'typeId', internalType: 'uint256' },
        { type: 'uint256', name: 'value', internalType: 'uint256' },
        { type: 'string', name: 'uri', internalType: 'string' },
        { type: 'bool', name: 'enabled', internalType: 'bool' },
        { type: 'bool', name: 'isRandom', internalType: 'bool' },
        { type: 'bool', name: 'isFixed', internalType: 'bool' },
        { type: 'uint256', name: 'max', internalType: 'uint256' },
        { type: 'uint256', name: 'min', internalType: 'uint256' },
        { type: 'uint256', name: 'defaultWeight', internalType: 'uint256' },
      ],
      name: 'nftTypes',
      inputs: [{ type: 'uint256', name: '', internalType: 'uint256' }],
    },
    {
      type: 'function',
      stateMutability: 'view',
      outputs: [
        { type: 'uint256', name: 'typeId', internalType: 'uint256' },
        { type: 'uint256', name: 'tokenId', internalType: 'uint256' },
        { type: 'uint256', name: 'weight', internalType: 'uint256' },
      ],
      name: 'nfts',
      inputs: [{ type: 'uint256', name: '', internalType: 'uint256' }],
    },
    {
      type: 'function',
      stateMutability: 'view',
      outputs: [{ type: 'address', name: '', internalType: 'address' }],
      name: 'owner',
      inputs: [],
    },
    {
      type: 'function',
      stateMutability: 'view',
      outputs: [{ type: 'address', name: '', internalType: 'address' }],
      name: 'ownerOf',
      inputs: [{ type: 'uint256', name: 'tokenId', internalType: 'uint256' }],
    },
    { type: 'function', stateMutability: 'nonpayable', outputs: [], name: 'renounceOwnership', inputs: [] },
    {
      type: 'function',
      stateMutability: 'nonpayable',
      outputs: [],
      name: 'safeTransferFrom',
      inputs: [
        { type: 'address', name: 'from', internalType: 'address' },
        { type: 'address', name: 'to', internalType: 'address' },
        { type: 'uint256', name: 'tokenId', internalType: 'uint256' },
      ],
    },
    {
      type: 'function',
      stateMutability: 'nonpayable',
      outputs: [],
      name: 'safeTransferFrom',
      inputs: [
        { type: 'address', name: 'from', internalType: 'address' },
        { type: 'address', name: 'to', internalType: 'address' },
        { type: 'uint256', name: 'tokenId', internalType: 'uint256' },
        { type: 'bytes', name: 'data', internalType: 'bytes' },
      ],
    },
    {
      type: 'function',
      stateMutability: 'nonpayable',
      outputs: [],
      name: 'setApprovalForAll',
      inputs: [
        { type: 'address', name: 'operator', internalType: 'address' },
        { type: 'bool', name: 'approved', internalType: 'bool' },
      ],
    },
    {
      type: 'function',
      stateMutability: 'nonpayable',
      outputs: [],
      name: 'setTokenAddr',
      inputs: [{ type: 'address', name: 'addr', internalType: 'address' }],
    },
    {
      type: 'function',
      stateMutability: 'view',
      outputs: [{ type: 'bool', name: '', internalType: 'bool' }],
      name: 'supportsInterface',
      inputs: [{ type: 'bytes4', name: 'interfaceId', internalType: 'bytes4' }],
    },
    {
      type: 'function',
      stateMutability: 'view',
      outputs: [{ type: 'string', name: '', internalType: 'string' }],
      name: 'symbol',
      inputs: [],
    },
    {
      type: 'function',
      stateMutability: 'view',
      outputs: [{ type: 'address', name: '', internalType: 'contract IERC20' }],
      name: 'token',
      inputs: [],
    },
    {
      type: 'function',
      stateMutability: 'view',
      outputs: [{ type: 'string', name: '', internalType: 'string' }],
      name: 'tokenURI',
      inputs: [{ type: 'uint256', name: 'tokenId', internalType: 'uint256' }],
    },
    {
      type: 'function',
      stateMutability: 'nonpayable',
      outputs: [],
      name: 'transferFrom',
      inputs: [
        { type: 'address', name: 'from', internalType: 'address' },
        { type: 'address', name: 'to', internalType: 'address' },
        { type: 'uint256', name: 'tokenId', internalType: 'uint256' },
      ],
    },
    {
      type: 'function',
      stateMutability: 'nonpayable',
      outputs: [],
      name: 'transferOwnership',
      inputs: [{ type: 'address', name: 'newOwner', internalType: 'address' }],
    },
    {
      type: 'function',
      stateMutability: 'nonpayable',
      outputs: [],
      name: 'updateNFTType',
      inputs: [
        { type: 'uint256', name: 'typeId', internalType: 'uint256' },
        { type: 'uint256', name: 'category', internalType: 'uint256' },
        { type: 'uint256', name: 'value', internalType: 'uint256' },
        { type: 'string', name: 'uri', internalType: 'string' },
        { type: 'bool', name: 'enabled', internalType: 'bool' },
        { type: 'bool', name: 'isRandom', internalType: 'bool' },
        { type: 'bool', name: 'isFixed', internalType: 'bool' },
        { type: 'uint256', name: 'max', internalType: 'uint256' },
        { type: 'uint256', name: 'min', internalType: 'uint256' },
        { type: 'uint256', name: 'defaultWeight', internalType: 'uint256' },
      ],
    },
    {
      type: 'event',
      name: 'Approval',
      inputs: [
        { type: 'address', name: 'owner', indexed: true },
        { type: 'address', name: 'approved', indexed: true },
        { type: 'uint256', name: 'tokenId', indexed: true },
      ],
      anonymous: false,
    },
    {
      type: 'event',
      name: 'ApprovalForAll',
      inputs: [
        { type: 'address', name: 'owner', indexed: true },
        { type: 'address', name: 'operator', indexed: true },
        { type: 'bool', name: 'approved', indexed: false },
      ],
      anonymous: false,
    },
    {
      type: 'event',
      name: 'Mint',
      inputs: [
        { type: 'uint256', name: 'tokenId', indexed: false },
        { type: 'uint256', name: 'typeId', indexed: false },
        { type: 'uint256', name: 'weight', indexed: false },
        { type: 'address', name: 'receiver', indexed: false },
        { type: 'uint256', name: 'amount', indexed: false },
      ],
      anonymous: false,
    },
    {
      type: 'event',
      name: 'OwnershipTransferred',
      inputs: [
        { type: 'address', name: 'previousOwner', indexed: true },
        { type: 'address', name: 'newOwner', indexed: true },
      ],
      anonymous: false,
    },
    {
      type: 'event',
      name: 'Transfer',
      inputs: [
        { type: 'address', name: 'from', indexed: true },
        { type: 'address', name: 'to', indexed: true },
        { type: 'uint256', name: 'tokenId', indexed: true },
      ],
      anonymous: false,
    },
  ],
};
